Resources:
  # S3 Bucket to contain the build artifacts from CodeBuild in order to
  # hand them over to CloudFormation
  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  # The CI/CD pipeline stitching the full mechanism together
  MarketplacePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${AWS::StackName}-Pipeline"
      RoleArn: !GetAtt MarketplacePipelineRole.Arn
      ArtifactStore:
        Location: !Ref PipelineArtifactBucket
        Type: S3
      Stages:
        - Actions:
            # Initiate Pipeline from CodeCommit
            - ActionTypeId:
                Version: "1"
                Provider: CodeStarSourceConnection
                Category: Source
                Owner: AWS
              OutputArtifacts:
                - Name: source
              InputArtifacts: []
              Name: source
              Configuration:
                ConnectionArn: "arn:aws:codestar-connections:us-east-1:711592834286:connection/0a71d274-8c68-4ee9-9f47-a061b67e6543"
                FullRepositoryId: "MDRCNY/aws-marketplace-serverless-saas-integration"
                BranchName: "master"
                OutputArtifactFormat: "CODE_ZIP"
              RunOrder: 1
              Namespace: SourceVars
          Name: Checkout-Repo
        - Actions:
            # Upload config files s3 to location
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref SiteUploadCodeBuildProject
              InputArtifacts:
                - Name: source
              Name: Site_Upload
              RunOrder: 1
              Namespace: BuildVars
          Name: MarketplaceSiteUpload

  # Role assumed by AWS CodeBuild to perform the compilation; see the
  # attached policy for detail
  SiteUploadCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com

  # Policy for AWS CodeBuild to perform the compilation; mainly needs
  # access to S3 bucket for storing artifacts and to CloudWatch Logs
  CodeBuildPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              "*"
          - Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:PutObject
            Effect: Allow
            Resource:
              "*"
              #- !GetAtt DemoArtifactBucket.Arn
              #- !Sub "${DemoArtifactBucket.Arn}/*"
          - Action:
              - cloudfront:CreateInvalidation
            Effect: Allow
            Resource:
              - "arn:aws:cloudfront::711592834286:distribution/E3MY7CN6AGEGZA"
              - "arn:aws:cloudfront::711592834286:distribution/E1LMPNQCFWDXVF"
      Roles:
        - Ref: SiteUploadCodeBuildRole

  SiteUploadCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: UPLOAD_BUCKET
            Value: !Ref PipelineArtifactBucket

      ServiceRole: !GetAtt SiteUploadCodeBuildRole.Arn
      Source:
        BuildSpec: |-
          {
            "version": "0.2",
            "phases": {
              "build": {
                "commands": [
                  "echo 'Updating Commercial Product Marketplace site ...' ",
                  "mkdir web-commercial",
                  "cp web/*.* web-commercial",
                  "ls -lart web-commercial",
                  "sed -i 's/APIGATEWAY_ID/kfmwrmdfj9/g' web-commercial/script.js",
                  "aws s3 cp ./web-commercial s3://vcr-commercial-website-marketplace --recursive",
                  "aws cloudfront create-invalidation --distribution-id E1LMPNQCFWDXVF --paths '/*'",
                  "echo 'Updating Commercial Product Marketplace site COMPLETE...' ",
                  "echo 'Updating GovCloud Product Marketplace site ...' ",
                  "mkdir web-gov",
                  "cp web/*.* web-gov",
                  "ls -lart web-gov",
                  "sed -i 's/APIGATEWAY_ID/aud2d1892e/g' web-commercial/script.js",
                  "aws s3 cp ./web-commercial s3://vcr-gov-website-marketplace --recursive",
                  "aws cloudfront create-invalidation --distribution-id E3MY7CN6AGEGZA --paths '/*'",
                  "echo 'Updating GovCloud Product Marketplace site COMPLETE...' ",

                ]
              }
            },
          }
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      Description: Pipeline step push files to s3

  MarketplacePipelinePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:PutObject
            Effect: Allow
            Resource: "*"
          - Action:
              - codestar-connections:UseConnection
            Effect: Allow
            Resource: "arn:aws:codestar-connections:us-east-1:711592834286:connection/0a71d274-8c68-4ee9-9f47-a061b67e6543"
      Roles:
        - Ref: MarketplacePipelineRole

  MarketplacePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
